/* 
 * Gitea API.
 *
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.1.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// StopWatch : StopWatch represent a running stopwatch

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct StopWatch {
  #[serde(rename = "created")]
  created: Option<String>,
  #[serde(rename = "issue_index")]
  issue_index: Option<i64>
}

impl StopWatch {
  /// StopWatch represent a running stopwatch
  pub fn new() -> StopWatch {
    StopWatch {
      created: None,
      issue_index: None
    }
  }

  pub fn set_created(&mut self, created: String) {
    self.created = Some(created);
  }

  pub fn with_created(mut self, created: String) -> StopWatch {
    self.created = Some(created);
    self
  }

  pub fn created(&self) -> Option<&String> {
    self.created.as_ref()
  }

  pub fn reset_created(&mut self) {
    self.created = None;
  }

  pub fn set_issue_index(&mut self, issue_index: i64) {
    self.issue_index = Some(issue_index);
  }

  pub fn with_issue_index(mut self, issue_index: i64) -> StopWatch {
    self.issue_index = Some(issue_index);
    self
  }

  pub fn issue_index(&self) -> Option<&i64> {
    self.issue_index.as_ref()
  }

  pub fn reset_issue_index(&mut self) {
    self.issue_index = None;
  }

}



